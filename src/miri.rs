/* automatically generated by rust-bindgen 0.64.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Provenance {
    pub alloc_id: ::std::os::raw::c_ulonglong,
    pub tag: ::std::os::raw::c_ulonglong,
}
#[test]
fn bindgen_test_layout_Provenance() {
    const UNINIT: ::std::mem::MaybeUninit<Provenance> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Provenance>(),
        16usize,
        concat!("Size of: ", stringify!(Provenance))
    );
    assert_eq!(
        ::std::mem::align_of::<Provenance>(),
        8usize,
        concat!("Alignment of ", stringify!(Provenance))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).alloc_id) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Provenance),
            "::",
            stringify!(alloc_id)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).tag) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Provenance),
            "::",
            stringify!(tag)
        )
    );
}
pub type Offset = ::std::os::raw::c_ulonglong;
pub type MiriMemoryHook = ::std::option::Option<unsafe extern "C" fn(p: Provenance)>;
pub type MiriStackHook = ::std::option::Option<unsafe extern "C" fn()>;
